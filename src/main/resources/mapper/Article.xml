<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wbxnl.blog.dao.ArticleDao">

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id
        , user_auth_id, category_id, cover, title, content, type, original_author, original_title, original_url, note, top, status, create_time, update_time, deleted
    </sql>

    <!--    dto-->
    <resultMap id="BaseDtoMap" type="com.wbxnl.blog.model.dto.ArticleDto">
        <id column="id" property="id"/>
        <result column="user_auth_id" property="userAuthId"/>
        <result column="cover" property="cover"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="type" property="type"/>
        <result column="original_author" property="originalAuthor"/>
        <result column="original_title" property="originalTitle"/>
        <result column="original_url" property="originalUrl"/>
        <result column="note" property="note"/>
        <result column="top" property="top"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="deleted" property="deleted"/>
        <association property="categoryDto" javaType="com.wbxnl.blog.model.dto.CategoryDto">
            <id column="c_id" property="id"/>
            <result column="c_name" property="name"/>
            <result column="c_hidden" property="hidden"/>
        </association>
        <collection property="tagDtos" ofType="com.wbxnl.blog.model.dto.TagDto" javaType="java.util.List">
            <id column="t_id" property="id"/>
            <result column="t_name" property="name"/>
            <result column="t_hidden" property="hidden"/>
        </collection>
    </resultMap>
    <!--    用户相关查询-->
<!--
TODO   BUG 用户分页查询时，使用标签查询的文章信息，只有查询的标签显示
            数量查询时同理
-->
<!--    <select id="getPageByUser" resultMap="BaseDtoMap">-->
<!--        select-->
<!--        a.id,-->
<!--        a.user_auth_id,-->
<!--        a.category_id,-->
<!--        a.title,-->
<!--        left(a.content,300) as content,-->
<!--        a.cover,-->
<!--        a.type,-->
<!--        a.original_author,-->
<!--        a.original_title,-->
<!--        a.original_url,-->
<!--        a.note,-->
<!--        a.top,-->
<!--        a.status,-->
<!--        a.create_time,-->
<!--        a.update_time,-->
<!--        a.deleted,-->

<!--        c.id as c_id,-->
<!--        c.name as c_name,-->
<!--        c.hidden as c_hidden,-->

<!--        t.id as t_id,-->
<!--        t.name as t_name,-->
<!--        t.hidden as t_hidden-->
<!--        from-->
<!--        t_article a-->
<!--        left join t_category c on c.id=a.category_id and c.deleted=0 and c.hidden=0-->
<!--        left join t_article_tag at on at.article_id=a.id-->
<!--        left join t_tag t on t.id=at.tag_id and t.deleted=0 and t.hidden=0-->
<!--        where-->
<!--        a.deleted=0-->
<!--        <if test="article.status!=null and article.status!=''">-->
<!--            and a.status=#{article.status}-->
<!--        </if>-->
<!--        <if test="article.type!=null and article.type!=''">-->
<!--            and a.type != #{article.type}-->
<!--        </if>-->
<!--        <if test="article.categoryId!=null and article.categoryId!=''">-->
<!--            and c.id=#{article.categoryId}-->
<!--        </if>-->

<!--        <if test="article.tagId !=null">-->
<!--            and t.id=#{article.tagId}-->
<!--        </if>-->
<!--        and a.id not in (-->
<!--        select distinct article_id as id-->
<!--        from t_article_tag at-->
<!--        right join t_tag t on at.tag_id = t.id and t.deleted=0-->
<!--        where t.hidden=1-->
<!--        )-->
<!--        order by top desc, a.update_time desc-->
<!--        limit #{current},#{limit}-->
<!--    </select>-->
    <select id="getPageByUser" resultMap="BaseDtoMap">
        select
        a.id,
        a.user_auth_id,
        a.category_id,
        a.title,
        left(a.content,300) as content,
        a.cover,
        a.type,
        a.original_author,
        a.original_title,
        a.original_url,
        a.note,
        a.top,
        a.status,
        a.create_time,
        a.update_time,
        a.deleted,

        c.id as c_id,
        c.name as c_name,
        c.hidden as c_hidden,

        t.id as t_id,
        t.name as t_name,
        t.hidden as t_hidden
        from
        (
        select distinct  a.id as id,a.top as top,a.update_time from t_article a
        left join t_category c on c.id=a.category_id and c.deleted =0 and c.hidden=0
        left join t_article_tag at on a.id=at.article_id
        left join t_tag t on t.id=at.tag_id and t.deleted=0 and t.hidden=0
        where
        a.deleted=0
        <if test="article.status!=null and article.status!=''">
            and a.status=#{article.status}
        </if>
        <if test="article.type!=null and article.type!=''">
            and a.type != #{article.type}
        </if>
        <if test="article.categoryId!=null and article.categoryId!=''">
            and c.id=#{article.categoryId}
        </if>
        <if test="article.tagId !=null">
            and t.id = #{article.tagId}
        </if>
        and a.id not in (
        select distinct article_id as id
        from t_article_tag at
        left join t_tag t on at.tag_id = t.id and t.deleted=0
        where t.hidden=1
        )
        order by a.top desc, a.update_time desc
        limit #{current},#{limit}
        ) as sa,
        t_article a
        left join t_category c on c.id=a.category_id and c.deleted=0 and c.hidden=0
        left join t_article_tag at on at.article_id=a.id
        left join t_tag t on t.id=at.tag_id and t.deleted=0 and t.hidden=0
        where
        a.id=sa.id
    </select>
    <!--    用户根据条件查询文章数量-->
    <select id="getCountByUser" resultType="Long">
        select distinct count(id) from
        (select distinct
        a.id
        from
        t_article a
        left join t_category c on c.id=a.category_id and c.deleted =0 and c.hidden=0
        left join t_article_tag at on at.article_id=a.id
        left join t_tag t on t.id=at.tag_id and t.deleted=0 and t.hidden=0
        where
        a.deleted=0
        <if test="article.status!=null and article.status!=''">
            and a.status=#{article.status}
        </if>
        <if test="article.type!=null and article.type!=''">
            and a.type != #{article.type}
        </if>
        <if test="article.categoryId !=null">
            and c.id=#{article.categoryId}
        </if>

        <if test="article.tagId !=null">
            and t.id = #{article.tagId}
        </if>
        and a.id not in (
        select distinct article_id as id
        from t_article_tag at
        right join t_tag t on at.tag_id = t.id and t.deleted=0
        where t.hidden=1
        ) )as ids
    </select>
    <!--    用户根据ID查询文章详细信息-->
    <select id="getArticleDtoByUser" resultMap="BaseDtoMap">
        select a.id,
        a.user_auth_id,
        a.category_id,
        a.title,
        a.content,
        a.cover,
        a.type,
        a.original_author,
        a.original_title,
        a.original_url,
        a.note,
        a.top,
        a.status,
        a.create_time,
        a.update_time,

        c.id as c_id,
        c.name as c_name,
        c.hidden as c_hidden,

        t.id as t_id,
        t.name as t_name,
        t.hidden as t_hidden
        from t_article a
        left join t_category c on c.id = a.category_id and c.deleted =0 and c.hidden=0
        left join t_article_tag at
        on at.article_id=a.id
        left join t_tag t on t.id= at.tag_id and t.deleted=0 and t.hidden=0
        where
        a.deleted=0
        and
        a.id=#{id}
        <if test="article.status!=null and article.status!=''">
            and a.status=#{article.status}
        </if>
        <if test="article.type!=null and article.type!=''">
            and a.type != #{article.type}
        </if>
    </select>
    <!--    文章归档-->
    <select id="getArchiveByUser" resultMap="BaseDtoMap">
        select distinct a.id,
        a.user_auth_id,
        a.category_id,
        a.title,
        a.cover,
        a.type,
        a.original_author,
        a.original_title,
        a.original_url,
        a.note,
        a.top,
        a.status,
        a.create_time,
        a.update_time,
        a.deleted,

        c.id as c_id,
        c.name as c_name,
        c.hidden as c_hidden
        from t_article a
        left join t_category c on c.id = a.category_id and c.deleted =0 and c.hidden=0
        left join t_article_tag at
        on at.article_id=a.id
        left join t_tag t on t.id= at.tag_id and t.deleted=0 and t.hidden=0
        where
        a.deleted=0
        <if test="article.status!=null and article.status!=''">
            and a.status=#{article.status}
        </if>
        <if test="article.type!=null and article.type!=''">
            and a.type != #{article.type}
        </if>
        and a.id not in (
        select distinct article_id as id
        from t_article_tag at
        left join t_tag t on at.tag_id = t.id and t.deleted=0
        where t.hidden=1
        )
        order by a.create_time desc
        limit #{current}, #{limit}
    </select>
    <!--    管理员查询文章归档信息-->
    <!--    TODO-->
    <select id="getArchive" resultMap="BaseDtoMap">
        select a.id,
               a.user_auth_id,
               a.category_id,
               a.title,
               a.cover,
               a.type,
               a.original_author,
               a.original_title,
               a.original_url,
               a.note,
               a.top,
               a.status,
               a.create_time,
               a.update_time,
               c.id   as c_id,
               c.name as c_name,
               t.id   as t_id,
               t.name as t_name,
        from t_article a
                 left join t_category c on c.id = a.category_id and c.deleted = 0
                 left join t_article_tag at
        on at.article_id=a.id
            left join t_tag t on t.id= at.tag_id and t.deleted=0
        where
            a.deleted=0
        order by a.create_time desc
            limit #{current}, #{limit}
    </select>
    <!--    管理员分页查询-->
<!--    <select id="getPage" resultMap="BaseDtoMap">-->
<!--        select a.id,-->
<!--        a.user_auth_id,-->
<!--        a.category_id,-->
<!--        a.title,-->
<!--        a.cover,-->
<!--        a.type,-->
<!--        a.original_author,-->
<!--        a.original_title,-->
<!--        a.original_url,-->
<!--        a.note,-->
<!--        a.top,-->
<!--        a.status,-->
<!--        a.create_time,-->
<!--        a.update_time,-->
<!--        a.deleted,-->
<!--        c.id as c_id,-->
<!--        c.name as c_name,-->
<!--        c.hidden as c_hidden,-->
<!--        t.id as t_id,-->
<!--        t.name as t_name,-->
<!--        t.hidden as t_hidden-->
<!--        from-->
<!--        t_article a-->
<!--        left join t_category c-->
<!--        on c.id=a.category_id and c.deleted =0-->
<!--        left join t_article_tag at on at.article_id=a.id-->
<!--        left join t_tag t on t.id= at.tag_id and t.deleted=0-->
<!--        where-->
<!--        a.deleted=0-->
<!--        <if test="article.title!=null and article.title!=''">-->
<!--            and a.title like concat('%',#{article.title},'%')-->
<!--        </if>-->
<!--        <if test="article.type!=null and article.type!=''">-->
<!--            and a.type=#{article.type}-->
<!--        </if>-->
<!--        <if test="article.status!=null and article.status!=''">-->
<!--            and a.status=#{article.status}-->
<!--        </if>-->
<!--        <if test="article.categoryId!=null">-->
<!--            and c.id=#{article.categoryId}-->
<!--        </if>-->
<!--        <if test="article.top!=null">-->
<!--            and a.top=#{article.top}-->
<!--        </if>-->

<!--        <if test="article.tagId!=null">-->
<!--            and a.id in (select distinct at.article_id as id-->
<!--            from t_article_tag at left join t_tag t on at.tag_id=t.id-->
<!--            where at.tag_id =#{article.tagId})-->
<!--        </if>-->
<!--        order by a.update_time desc-->
<!--        limit #{current}, #{limit}-->
<!--    </select>-->
    <select id="getPage" resultMap="BaseDtoMap">
        select a.id,
        a.user_auth_id,
        a.category_id,
        a.title,
        a.cover,
        a.type,
        a.original_author,
        a.original_title,
        a.original_url,
        a.note,
        a.top,
        a.status,
        a.create_time,
        a.update_time,
        a.deleted,
        c.id as c_id,
        c.name as c_name,
        c.hidden as c_hidden,
        t.id as t_id,
        t.name as t_name,
        t.hidden as t_hidden
        from (
        select distinct a.id as id,a.update_time from
        t_article a
        left join t_category c on c.id=a.category_id and  c.deleted =0
        left join t_article_tag at on at.article_id=a.id
        left join t_tag t on t.id= at.tag_id and t.deleted=0
        where
        a.deleted=0
        <if test="article.title!=null and article.title!=''">
            and a.title like concat('%',#{article.title},'%')
        </if>
        <if test="article.type!=null and article.type!=''">
            and a.type=#{article.type}
        </if>
        <if test="article.status!=null and article.status!=''">
            and a.status=#{article.status}
        </if>
        <if test="article.categoryId!=null">
            and c.id=#{article.categoryId}
        </if>

        <if test="article.top!=null">
            and a.top=#{article.top}
        </if>
        <if test="article.tagId!=null">
            and a.id in (select distinct at.article_id as id
            from t_article_tag at left join t_tag t on at.tag_id=t.id
            where at.tag_id =#{article.tagId})
        </if>
        order by a.update_time desc
        limit #{current}, #{limit}
        ) as sa,
        t_article a
        left join t_category c  on c.id=a.category_id and c.deleted=0
        left join t_article_tag at on at.article_id=a.id
        left join t_tag t on t.id= at.tag_id and t.deleted=0
        where
        sa.id=a.id
        order by a.update_time desc
    </select>
    <!--    根据条件查询数量-->
    <select id="getCount" resultType="Long">
        select
        count(distinct a.id) as count
        from
        t_article a
        left join t_category c
        on c.id=a.category_id and c.deleted =0
        left join t_article_tag at on at.article_id=a.id
        left join t_tag t on t.id= at.tag_id and t.deleted=0
        where
        a.deleted=0
        <if test="article.title!=null and article.title!=''">
            and a.title like concat('%',#{article.title},'%')
        </if>
        <if test="article.type!=null and article.type!=''">
            and a.type=#{article.type}
        </if>
        <if test="article.status!=null and article.status!=''">
            and a.status=#{article.status}
        </if>
        <if test="article.categoryId!=null">
            and c.id=#{article.categoryId}
        </if>
        <if test="article.top!=null">
            and a.top=#{article.top}
        </if>
        <if test="article.tagId!=null">
            and a.id in (select distinct at.article_id as id
            from t_article_tag at left join t_tag t on at.tag_id=t.id
            where at.tag_id =#{article.tagId})
        </if>
    </select>
    <!--    管理员详细查询-->
    <select id="getArticleDto" resultMap="BaseDtoMap">
        select a.id,
               a.user_auth_id,
               a.category_id,
               a.title,
               a.content,
               a.cover,
               a.type,
               a.original_author,
               a.original_title,
               a.original_url,
               a.note,
               a.top,
               a.status,
               a.create_time,
               a.update_time,
               a.deleted,

               c.id     as c_id,
               c.name   as c_name,
               c.hidden as c_hidden,

               t.id     as t_id,
               t.name   as t_name,
               t.hidden as t_hidden
        from t_article a
                 left join t_category c on c.id = a.category_id
                 left join t_article_tag at
        on at.article_id=a.id
            left join t_tag t on t.id= at.tag_id
        where
            a.deleted=0
          and
            a.id=#{id}
          and
            (c.deleted is null
           or c.deleted =0)
          and
            (t.deleted is null
           or t.deleted=0)
    </select>

    <resultMap id="NameValueMap" type="com.wbxnl.blog.model.dto.extra.NameValueDto">
        <id column="date" property="name"/>
        <result column="count" property="value"/>
    </resultMap>

    <!--   根据时间间隔查询文章数量统计 -->
    <select id="getStatisticsOfCount" resultMap="NameValueMap">
            <![CDATA[
        SELECT date_range.date, COUNT(t_article.create_time) AS count
        FROM (
            SELECT DATE (DATE_ADD(#{queryParams.beginDate}, INTERVAL n.num DAY)) AS date
            FROM (
            SELECT (a.num + b.num * 10 + 1) - 1 AS num
            FROM (SELECT 0 AS num UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3
            UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7
            UNION ALL SELECT 8 UNION ALL SELECT 9) a
            CROSS JOIN (SELECT 0 AS num UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3
            UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7
            UNION ALL SELECT 8 UNION ALL SELECT 9) b
            ) n
            WHERE DATE (DATE_ADD(#{queryParams.beginDate}, INTERVAL n.num DAY)) <= #{queryParams.endDate}
            ) date_range
            LEFT JOIN t_article
        ON DATE (t_article.create_time) = date_range.date
        GROUP BY date_range.date
        order by date_range.date
        ]]>
        </select>
</mapper>
